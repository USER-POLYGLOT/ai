name: CD - AI Microservice

# Trigger CD after the CI workflow finishes successfully
on:
  workflow_run:
    workflows: ["CI - Spring Boot Translate Service"]
    types:
      - completed

jobs:
  deploy:
    # Only run if the CI workflow was successful
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: self-hosted  # your self-hosted runner

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

    steps:
      # 1️⃣ Checkout the repo (optional if only kubectl is needed)
      - name: Checkout Repo
        uses: actions/checkout@v4

      # 2️⃣ Log in to Docker Hub
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 3️⃣ Pull the Docker image built by CI
      - name: Pull Docker Image
        run: |
          docker pull anubhav1404/user-ai-service:${{ github.event.workflow_run.head_sha }}
          docker pull anubhav1404/user-ai-service:latest

      # 4️⃣ Create/update AWS credentials secret in Kubernetes (if not exists)
      - name: Apply AWS Secret
        run: |
          kubectl get secret aws-credentials || \
          kubectl create secret generic aws-credentials \
            --from-literal=accessKey=${{ secrets.AWS_ACCESS_KEY_ID }} \
            --from-literal=secretKey=${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # 5️⃣ Update AI service deployment with new Docker image
      - name: Update AI Deployment
        run: |
          kubectl set image deployment/ai-service \
            ai-service=anubhav1404/user-ai-service:${{ github.event.workflow_run.head_sha }}

      # 6️⃣ Wait for rollout to complete
      - name: Wait for Rollout
        run: |
          kubectl rollout status deployment/ai-service
